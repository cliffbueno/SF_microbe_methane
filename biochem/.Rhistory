y = bold(expression(""*CH[4]*" flux (µg/"*m^2*"/h)"))) +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 2, scales = "free_x", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
ggplot(env_long, aes(value, CH4_ug_m2_h, colour = Location)) +
geom_point(size = 2, alpha = 0.75) +
labs(x = "[Fe]",
y = expression(bold(""*CH[4]*" flux (µg/"*m^2*"/h)"))) +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 2, scales = "free_x", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
ggplot(env_long, aes(Location, value, colour = Location)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75) +
labs(y = "[Fe]",
x = "Location") +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 1, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
pdf("Iron_location.pdf", width = 6, height = 6)
ggplot(env_long, aes(value, CH4_ug_m2_h, colour = Location)) +
geom_point(size = 2, alpha = 0.75) +
labs(x = "[Fe]",
y = expression(bold(""*CH[4]*" flux (µg/"*m^2*"/h)"))) +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 2, scales = "free_x", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
dev.off()
pdf("Iron_location.pdf", width = 6, height = 4)
ggplot(env_long, aes(value, CH4_ug_m2_h, colour = Location)) +
geom_point(size = 2, alpha = 0.75) +
labs(x = "[Fe]",
y = expression(bold(""*CH[4]*" flux (µg/"*m^2*"/h)"))) +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 2, scales = "free_x", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
dev.off()
pdf("Iron_location.pdf", width = 6, height = 3)
ggplot(env_long, aes(value, CH4_ug_m2_h, colour = Location)) +
geom_point(size = 2, alpha = 0.75) +
labs(x = "[Fe]",
y = expression(bold(""*CH[4]*" flux (µg/"*m^2*"/h)"))) +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 2, scales = "free_x", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
dev.off()
pdf("Iron_methane.pdf", width = 6, height = 3)
ggplot(env_long, aes(Location, value, colour = Location)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75) +
labs(y = "[Fe]",
x = "Location") +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 1, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
dev.off()
pdf("Iron_methane.pdf", width = 6, height = 3)
ggplot(env_long, aes(value, CH4_ug_m2_h, colour = Location)) +
geom_point(size = 2, alpha = 0.75) +
labs(x = "[Fe]",
y = expression(bold(""*CH[4]*" flux (µg/"*m^2*"/h)"))) +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 2, scales = "free_x", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
dev.off()
pdf("Iron_location.pdf", width = 6, height = 3)
ggplot(env_long, aes(Location, value, colour = Location)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75) +
labs(y = "[Fe]",
x = "Location") +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 1, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
dev.off()
pdf("Iron_location.pdf", width = 7, height = 4)
ggplot(env_long, aes(Location, value, colour = Location)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75) +
labs(y = "[Fe]",
x = "Location") +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 1, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
dev.off()
pdf("Iron_location.pdf", width = 7, height = 4)
ggplot(env_long, aes(Location, value, colour = Location)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75) +
labs(y = "[Fe]",
x = "Location") +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 1, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 7, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
dev.off()
ggplot(env_long, aes(Salinity, value, colour = Location)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75) +
labs(y = "[Fe]",
x = "Salinity") +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 1, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 7, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
ggplot(env_long, aes(Salinity.x, value, colour = Location)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75) +
labs(y = "[Fe]",
x = "Salinity") +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 1, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 7, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
ggplot(env_long, aes(Salinity.x, value, colour = Location)) +
geom_point(size = 2, alpha = 0.75) +
labs(y = "[Fe]",
x = "Salinity") +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 1, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 7, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
pdf("Iron_methane.pdf", width = 6, height = 3)
ggplot(env_long, aes(value, CH4_ug_m2_h, colour = Location)) +
geom_point(size = 2, alpha = 0.75) +
labs(x = "[Fe]",
y = expression(bold(""*CH[4]*" flux (µg/"*m^2*"/h)"))) +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 2, scales = "free_x", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
dev.off()
pdf("Iron_location.pdf", width = 7, height = 4)
ggplot(env_long, aes(Location, value, colour = Location)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75) +
labs(y = "[Fe]",
x = "Location") +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 1, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 7, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
dev.off()
library(plyr)
library(tidyverse)
library(readxl)
library(gplots)
library(scales)
library(magrittr)
library(DESeq2)
library(pheatmap)
library(vegan)
library(RColorBrewer)
library(corrplot)
library(cowplot)
library(agricolae)
library(car)
library(nlme)
library(multcomp)
library(multcompView)
library(lsmeans)
library(reshape2)
library(lme4)
`%notin%` <- Negate(`%in%`)
hue_pal()(11)
# Wyatt's color palette
Wyatt_palette <- c("#3f4c1d", "#65733a", "#2c9553", "#275831",
"#3e797c", "#235355", "#5f9c9e", "#6c92b2",
"#64679d", "#412142", "#8e5589")
# Chem data
chem <- read_excel("~/Desktop/Wyatt Manuscript/Cliff_DataTables.xlsx",
sheet = 1) %>%
filter(Filter == "Keep") %>%
mutate_at(., c(1:7,33), as.factor) %>%
mutate_at(., c(19,22:32), as.numeric) %>%
mutate(N.P = N/P) %>%
mutate(CH4 = `CH4 ug /m2/h`) %>%
mutate(logCH4 = log10(CH4+1))
#### Map ####
setwd("~/Documents/GitHub/SF_microbe_methane/biochem/")
# Colors
site_colors <- read.table("../data/colors/Sal_siteColors_testR.txt",
sep = '\t', header = T, row.names = 1) %>%
set_names(c('color','Location'))
# Metadata
metaDB <- read.table("../data/meta/SF_sal_meta_FIX3.5.txt", sep = "\t", header = TRUE) %>%
mutate(Location = factor(Location, levels = rownames(site_colors)))
names(metaDB)
# Geographic coordinates
coords <- read.csv("../data/meta/Coords.csv") %>%
left_join(., site_colors, by = "Location")
adjust = c("RushRanch", "Browns")
coords1 <- subset(coords, Location %notin% adjust)
coords2 <- subset(coords, Location %in% adjust)
#### Functions ####
# transform function
lal_trans_transform <- function(x) case_when(
x < -1 ~ -log10(abs(x)) - 1,
x > 1 ~ log10(x) + 1,
TRUE ~ x
)
# inverse transform
lal_trans_inverse <- function(x) case_when(
x < -1 ~ -10^(abs(x+1)),
x > 1 ~ 10^(x-1),
TRUE ~ x
)
lal_trans = trans_new(
'lal',
transform = lal_trans_transform,
inverse = lal_trans_inverse,
breaks = function(x) {
x = x[is.finite(x)]
rng = range(x)
if (rng[1] < -1){
min_val = -ceiling(log10(abs(rng[1])+1)) - 1
} else if (rng[1] < 0){
min_val = -1
} else if (rng[1] < 1){
min_val = 0
} else {
min_val = ceiling(log10(rng[1])-1) - 1
}
if (rng[2] > 1){
max_val = floor(log10(abs(rng[2]) + 1)) + 1
} else if (rng[2] > 0){
max_val = 1
} else if (rng[2] > -1){
max_val = 0
} else {
max_val = -floor(log10(abs(rng[1]))-1) + 1
}
breaks = lal_trans_inverse(as.numeric(seq.int(min_val, max_val)))
return(breaks)
}
)
#### Iron ####
# Check iron for Dennis
# Measurements are for D2, CH4 and porewater are duplicated, so just get D2
# Note sediment is ppm, porewater is ppb
env <- read.delim("Code_data/SF_sal_meta_FIX3.5.txt") %>%
filter(Depth == "d2") %>%
mutate(Location = factor(Location,
levels = c("Sandmound", "WestPond", "Mayberry",
"Browns", "RushRanch", "Joice", "Goodyear",
"WhiteSlough", "Tolay", "ChinaCamp", "Muzzi")))
#### Iron ####
# Check iron for Dennis
# Measurements are for D2, CH4 and porewater are duplicated, so just get D2
# Note sediment is ppm, porewater is ppb
env <- read.table("../data/meta/SF_sal_meta_FIX3.5.txt", sep = "\t", header = TRUE) %>%
filter(Depth == "d2") %>%
mutate(Location = factor(Location,
levels = c("Sandmound", "WestPond", "Mayberry",
"Browns", "RushRanch", "Joice", "Goodyear",
"WhiteSlough", "Tolay", "ChinaCamp", "Muzzi")))
env_long <- env %>%
pivot_longer(cols = c(Fe, Fe_pw),
names_to = "Dataset")
facet_names <- c("Fe" = "Sediment [Fe] (ppm)",
"Fe_pw" = "Porewater [Fe] (ppb)")
ggplot(env_long, aes(value, CH4_ug_m2_h, colour = Location)) +
geom_point(size = 2, alpha = 0.75) +
labs(x = "[Fe]",
y = expression(bold(""*CH[4]*" flux (µg/"*m^2*"/h)"))) +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 2, scales = "free_x", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 8, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
ggplot(env_long, aes(Location, value, colour = Location)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(size = 2, alpha = 0.75) +
labs(y = "[Fe]",
x = "Location") +
scale_colour_manual(values = Wyatt_palette) +
facet_wrap(~ Dataset, ncol = 1, scales = "free_y", labeller = as_labeller(facet_names)) +
theme_bw() +
theme(legend.position = "none",
axis.title = element_text(size = 12, color = "black", face = "bold"),
axis.text = element_text(size = 7, color = "black"),
axis.ticks = element_line(color = "black"),
strip.text = element_text(size = 10, color = "black"))
#### Stats ####
leveneTest(chem$`CH4 ug /m2/h` ~ chem$Type)
leveneTest(log(chem$`CH4 ug /m2/h` + 1) ~ chem$Type)
plot(log(chem$`CH4 ug /m2/h` + 1) ~ chem$Type)
kruskal.test(chem$`CH4 ug /m2/h` ~ chem$Type)
kruskal.test(chem$`CH4 ug /m2/h` ~ chem$Location)
kruskal.test(chem$`CH4 ug /m2/h` ~ chem$Zone)
summary(lm(chem$`CH4 ug /m2/h` ~ chem$Zone + chem$Type + chem$Location))
m <- lmer(`CH4 ug /m2/h` ~ Type + (1|Location), data = chem)
Anova(m)
m1 <- lm(`CH4 ug /m2/h` ~ Location, data = chem)
anova(m, m1)
# NLME
model <- lme(CH4 ~ Location, random = ~1|Type,
data = chem,
method = "REML")
anova.lme(model,
type = "sequential",
adjustSigma = FALSE)
posthoc <- glht(model,
linfct = mcp(Location = "Tukey"))
mcs <- summary(posthoc,
test = adjusted("single-step"))
mcs
cld(mcs,
level = 0.05,
decreasing = FALSE)
leastsquare = lsmeans(model,
pairwise ~ Location,
adjust = "tukey")
leastsquare
cld(leastsquare,
alpha = 0.05,
Letters = letters,
adjust = "tukey")
model.fixed = gls(CH4 ~ Location,
data = chem,
method = "REML")
emmeans(model.fixed,
specs = "Location")
anova(model,
model.fixed)
hist(residuals(model), col = "darkgray")
plot(fitted(model), residuals(model))
posthoc <- glht(model.fixed,
linfct = mcp(Location = "Tukey"))
mcs <- summary(posthoc,
test = adjusted("single-step"))
mcs
cld(mcs,
level = 0.05,
decreasing = FALSE)
# Test log10 (use this as that's what Wyatt's methods say)
m <- aov(logCH4 ~ Location, data = chem)
summary(m)
TukeyHSD(m)
tuk <- HSD.test(m, "Location", group = TRUE, unbalanced = TRUE)
tuk$groups
lab.df <- tuk$groups %>%
rownames_to_column(var = "Location") %>%
mutate(y = rep(1750, 11))
hist(residuals(m), col = "darkgray")
plot(fitted(m), residuals(m))
model <- lme(logCH4 ~ Location, random = ~1|Type,
data = chem,
method = "REML")
anova.lme(model,
type = "sequential",
adjustSigma = FALSE)
posthoc <- glht(model,
linfct = mcp(Location = "Tukey"))
mcs <- summary(posthoc,
test = adjusted("single-step"))
mcs
cld(mcs,
level = 0.05,
decreasing = TRUE)
leastsquare = lsmeans(model,
pairwise ~ Location,
adjust = "tukey")
leastsquare
cld(leastsquare,
alpha = 0.05,
Letters = letters,
adjust = "tukey")
model.fixed = gls(logCH4 ~ Location,
data = chem,
method = "REML")
anova(model,
model.fixed)
hist(residuals(model), col = "darkgray")
plot(fitted(model), residuals(model))
# Use status as fixed, site as random
model <- lme(logCH4 ~ Type, random = ~1|Location,
data = chem,
method = "REML")
anova.lme(model,
type = "sequential",
adjustSigma = FALSE)
posthoc <- glht(model,
linfct = mcp(Type = "Tukey"))
mcs <- summary(posthoc,
test = adjusted("single-step"))
mcs
cld(mcs,
level = 0.05,
decreasing = TRUE)
leastsquare = lsmeans(model,
pairwise ~ Type,
adjust = "tukey")
leastsquare
cld(leastsquare,
alpha = 0.05,
Letters = letters,
adjust = "tukey")
model.fixed = gls(logCH4 ~ Type,
data = chem,
method = "REML")
anova(model,
model.fixed)
hist(residuals(model), col = "darkgray")
plot(fitted(model), residuals(model))
# Use status as fixed, site as random
model <- lme(logCH4 ~ Type, random = ~1|Location,
data = chem,
method = "REML")
anova.lme(model,
type = "sequential",
adjustSigma = FALSE)
posthoc <- glht(model,
linfct = mcp(Type = "Tukey"))
mcs <- summary(posthoc,
test = adjusted("single-step"))
mcs
cld(mcs,
level = 0.05,
decreasing = TRUE)
leastsquare = lsmeans(model,
pairwise ~ Type,
adjust = "tukey")
leastsquare
cld(leastsquare,
alpha = 0.05,
Letters = letters,
adjust = "tukey")
model.fixed = gls(logCH4 ~ Type,
data = chem,
method = "REML")
anova(model,
model.fixed)
# NO3_NH4
cor.test(env$NO3_NH4, env$CH4_ug_m2_h)
