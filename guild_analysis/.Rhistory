N2O_ug_m2_h = `N2O flux (ug/m2/hr)`,
Salinity_calcd_ppt = Cl_mgL * 0.0018066,
Salinity_ppt_all = Cl_mgL/1000) %>%
mutate(Fe_mgL = NA,
Acetate_mgL = NA,
TotalVFA_uM = NA,
SR_umol_cm3_d = NA,
AMG_umol_cm3_d = NA,
DOC_mgL = NA,
Na_mgL = NA,
K_mgL = NA,
Ca_mgL = NA,
Mn_mgL = NA,
Mg_mgL = NA,
Cu_mgL = NA,
Zn_mgL = NA,
Estuary = "Alligator",
Salinity = NA,
sed_per_C = NA,
sed_per_N = NA,
sed_CN = NA,
sed_per_org = NA,
sed_per_inorg = NA,
Conductivity_uS_cm = NA,
CH4_pw_air_ppmv = NA,
N2_umol_m2_h = NA,
SOD_umol_m2_h = NA,
NO3_umol_m2_h = NA,
NH4_umol_m2_h = NA,
SRP_umol_m2_h = NA,
DON_umol_m2_h = NA,
NEE_mgC_m2_m = NA,
GEP_mgC_m2_m = NA,
PAR_uE_m2_s = NA,
CH4_pot_umol_gdw_h = NA,
CO2_pot_umol_gdw_h = NA,
sed_pH = NA,
sed_NH4_mgL = NA,
sed_NO3_mgL = NA,
sed_PO4_mgL = NA,
sed_Cl_mgL = NA,
sed_SO4_mgL = NA,
sed_Bulk_dens = NA,
sed_Fe_mgL = NA,
sed_Mn_mgL = NA,
sed_Cu_mgL = NA,
sed_Zn_mgL = NA,
DIC_mgL = NA) %>%
select(Estuary, sampleID, Salinity_calcd_ppt, Salinity, Salinity_ppt_all,
Conductivity_uS_cm, CH4_pw_air_ppmv,
CH4_ug_m2_h, N2O_ug_m2_h, CO2_ug_m2_h,
NEE_mgC_m2_m, GEP_mgC_m2_m, PAR_uE_m2_s,
CH4_pot_umol_gdw_h, CO2_pot_umol_gdw_h,
Cl_mgL, SO4_mgL, NH4_mgL, NO3_mgL, pH, PO4_mgL,
Fe_mgL, Acetate_mgL, TotalVFA_uM, SR_umol_cm3_d, AMG_umol_cm3_d,
TOC_mgL, TN_mgL, Br_mgL, DIN_mgL, DON_mgL, DOC_mgL, DIC_mgL, Na_mgL,
K_mgL, Ca_mgL, Mn_mgL, Mg_mgL, Cu_mgL, Zn_mgL,
sed_pH, sed_NH4_mgL, sed_NO3_mgL, sed_PO4_mgL, sed_Cl_mgL, sed_SO4_mgL,
sed_per_C, sed_per_N, sed_CN, sed_per_org, sed_per_inorg,
sed_Bulk_dens, sed_Fe_mgL, sed_Mn_mgL, sed_Cu_mgL, sed_Zn_mgL,
N2_umol_m2_h,	SOD_umol_m2_h,	NO3_umol_m2_h,	NH4_umol_m2_h,	SRP_umol_m2_h,	DON_umol_m2_h)
#### SC Biogeochem ####
# Note: flux, porewater, and soil data, so need to specify
# Also 2 types of flux: field measured emissions and potential production
# Other fluxes: N2_umol_m2_h,	SOD_umol_m2_h,	NO3_umol_m2_h,	NH4_umol_m2_h,	SRP_umol_m2_h,	DON_umol_m2_h
# Porewater pH, conductivity, salinity, CH4, DIC
# Soil %C, %N, CN, % organic, % inorganic
metaSC <- read_excel("~/Documents/GitHub/EastCoast/Nov 2011 data from Brookgreen.xlsx",
sheet = 5) %>%
mutate(Conductivity_uS_cm = as.numeric(Conductivity_uS_cm),
Salinity_calcd_ppt = NA,
Salinity_ppt_all = as.numeric(Salinity),
CO2_ug_m2_h = CO2_mg_m2_m * 1000 * 60,
CH4_ug_m2_h = CH4_mg_m2_m * 1000 * 60,
CH4_pw_air_ppmv = as.numeric(CH4_pw_air_ppmv),
DIC_mmolL = as.numeric(DIC_mmolL),
CH4_pot_umol_gdw_h = CH4_pot_nmol_gdw_h/1000) %>%
mutate(Cl_mgL = NA,
SO4_mgL = NA,
NH4_mgL = NA,
PO4_mgL = NA,
TN_mgL = NA,
Fe_mgL = NA,
Acetate_mgL = NA,
TotalVFA_uM = NA,
SR_umol_cm3_d = NA,
AMG_umol_cm3_d = NA,
NO3_mgL = NA,
DOC_mgL = NA,
DIC_mgL = DIC_mmolL * 12.01,
Na_mgL = NA,
K_mgL = NA,
Ca_mgL = NA,
Mn_mgL = NA,
Mg_mgL = NA,
Cu_mgL = NA,
Zn_mgL = NA,
N2O_ug_m2_h = NA,
Acetate_mgL = NA,
TotalVFA_uM = NA,
SR_umol_cm3_d = NA,
AMG_umol_cm3_d = NA,
TOC_mgL = NA,
Br_mgL = NA,
DIN_mgL = NA,
DON_mgL = NA,
Estuary = "Waccamaw",
sed_pH = NA,
sed_NH4_mgL = NA,
sed_NO3_mgL = NA,
sed_PO4_mgL = NA,
sed_Cl_mgL = NA,
sed_SO4_mgL = NA,
sed_Bulk_dens = NA,
sed_Fe_mgL = NA,
sed_Mn_mgL = NA,
sed_Cu_mgL = NA,
sed_Zn_mgL = NA) %>%
select(Estuary, sampleID, Salinity_calcd_ppt, Salinity, Salinity_ppt_all,
Conductivity_uS_cm, CH4_pw_air_ppmv,
CH4_ug_m2_h, N2O_ug_m2_h, CO2_ug_m2_h,
NEE_mgC_m2_m, GEP_mgC_m2_m, PAR_uE_m2_s,
CH4_pot_umol_gdw_h, CO2_pot_umol_gdw_h,
Cl_mgL, SO4_mgL, NH4_mgL, NO3_mgL, pH, PO4_mgL,
Fe_mgL, Acetate_mgL, TotalVFA_uM, SR_umol_cm3_d, AMG_umol_cm3_d,
TOC_mgL, TN_mgL, Br_mgL, DIN_mgL, DON_mgL, DOC_mgL, DIC_mgL, Na_mgL,
K_mgL, Ca_mgL, Mn_mgL, Mg_mgL, Cu_mgL, Zn_mgL,
sed_pH, sed_NH4_mgL, sed_NO3_mgL, sed_PO4_mgL, sed_Cl_mgL, sed_SO4_mgL,
sed_per_C, sed_per_N, sed_CN, sed_per_org, sed_per_inorg,
sed_Bulk_dens, sed_Fe_mgL, sed_Mn_mgL, sed_Cu_mgL, sed_Zn_mgL,
N2_umol_m2_h,	SOD_umol_m2_h,	NO3_umol_m2_h,	NH4_umol_m2_h,	SRP_umol_m2_h,	DON_umol_m2_h)
#### SF Biogeochem ####
# Get meta file from other repo
# Get porewater data (but NO3 and NH4 are from sediment extraction)
# Get correct units, calc salinity
# Note Cl was in meq/L so needed to convert
metaSF <- read.delim("~/Documents/GitHub/SF_microbe_methane/data/meta/SF_sal_meta_FIX3.5.txt") %>%
mutate(Cl_mgL = Cl_pw*35.45) %>%
mutate(Salinity_calcd_ppt = Salinity.x,
Salinity_ppt_all = Salinity.x,
Salinity = Salinity.x,
sampleID = Sample,
CO2_ug_m2_h = CO2_mg_m2_h * 1000,
SO4_mgL = SO4_pw,
sed_pH = pH,
sed_NH4_mgL = NH4_N,
sed_NO3_mgL = NO3_N,
sed_PO4_mgL = Olsen_P,
sed_Cl_mgL = Cl*35.45,
sed_SO4_mgL = SO4,
Fe_mgL = Fe_pw,
TN_mgL = N,
DOC_mgL = DOC_mg_L,
Na_mgL = Na_pw,
K_mgL = K_pw,
Ca_mgL = Ca_pw,
Mn_mgL = Mn_pw,
Mg_mgL = Mg_pw,
Cu_mgL = Cu_pw,
Zn_mgL = Mg_pw) %>%
mutate(N2O_ug_m2_h = NA,
Acetate_mgL = NA,
TotalVFA_uM = NA,
SR_umol_cm3_d = NA,
AMG_umol_cm3_d = NA,
TOC_mgL = NA,
Br_mgL = NA,
DIN_mgL = NA,
DON_mgL = NA,
NH4_mgL = NA,
NO3_mgL = NA,
PO4_mgL = NA,
Estuary = "SF",
sed_per_C = C,
sed_per_N = N,
sed_CN = CN,
sed_P = P,
sed_CP = CP,
sed_NP = NP,
sed_per_org = NA,
sed_per_inorg = NA,
sed_Bulk_dens = Bulk_dens,
sed_Fe_mgL = Fe,
sed_Mn_mgL = Mn,
sed_Cu_mgL = Cu,
sed_Zn_mgL = Zn,
Conductivity_uS_cm = NA,
CH4_pw_air_ppmv = NA,
N2_umol_m2_h = NA,
SOD_umol_m2_h = NA,
NO3_umol_m2_h = NA,
NH4_umol_m2_h = NA,
SRP_umol_m2_h = NA,
DON_umol_m2_h = NA,
NEE_mgC_m2_m = NA,
GEP_mgC_m2_m = NA,
PAR_uE_m2_s = NA,
CH4_pot_umol_gdw_h = NA,
CO2_pot_umol_gdw_h = NA,
DIC_mgL = NA) %>%
select(Estuary, sampleID, Salinity_calcd_ppt, Salinity, Salinity_ppt_all,
Conductivity_uS_cm, CH4_pw_air_ppmv,
CH4_ug_m2_h, N2O_ug_m2_h, CO2_ug_m2_h,
NEE_mgC_m2_m, GEP_mgC_m2_m, PAR_uE_m2_s,
CH4_pot_umol_gdw_h, CO2_pot_umol_gdw_h,
Cl_mgL, SO4_mgL, NH4_mgL, NO3_mgL, pH, PO4_mgL,
Fe_mgL, Acetate_mgL, TotalVFA_uM, SR_umol_cm3_d, AMG_umol_cm3_d,
TOC_mgL, TN_mgL, Br_mgL, DIN_mgL, DON_mgL, DOC_mgL, DIC_mgL, Na_mgL,
K_mgL, Ca_mgL, Mn_mgL, Mg_mgL, Cu_mgL, Zn_mgL,
sed_pH, sed_NH4_mgL, sed_NO3_mgL, sed_PO4_mgL, sed_Cl_mgL, sed_SO4_mgL,
sed_per_C, sed_per_N, sed_CN, sed_per_org, sed_per_inorg,
sed_Bulk_dens, sed_Fe_mgL, sed_Mn_mgL, sed_Cu_mgL, sed_Zn_mgL,
N2_umol_m2_h,	SOD_umol_m2_h,	NO3_umol_m2_h,	NH4_umol_m2_h,	SRP_umol_m2_h,	DON_umol_m2_h)
# Something is of about salinity and Cl
m <- lm(Cl_mgL/1000 ~ Salinity, data = metaSF)
summary(m)
ggplot(metaSF, aes(Salinity, Cl_mgL/1000)) +
geom_point() +
geom_smooth(method = "lm") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
labs(x = "Water salinity (YSI ppt)",
y = "Porewater salinity (Cl- ppt)") +
theme_classic()
ggplot(metaSF, aes(Salinity, sed_Cl_mgL/1000)) +
geom_point() +
geom_smooth(method = "lm") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
labs(x = "Water salinity (YSI ppt)",
y = "Sediment salinity (Cl- ppt)") +
theme_classic()
#### Merge and Save ####
sum(names(metaDE) != names(metaNC))
sum(names(metaDE) != names(metaSC))
sum(names(metaDE) != names(metaSF))
metaComb <- rbind(metaDE, metaNC, metaSC, metaSF)
write.csv(metaComb, "biogeochem_all_clean.csv")
metaComb <- read.csv("biogeochem_all_clean.csv") %>%
mutate(Estuary = factor(Estuary,
levels = c("Waccamaw", "Alligator", "Delaware", "SF")))
#### Quick Look ####
# All
metaComb_long <- melt(metaComb,
id.vars = c("Estuary", "sampleID"),
measure.vars = names(metaComb)[4:ncol(metaComb)])
# Sort by sample size
metaComb_long_n <- metaComb_long %>%
group_by(variable) %>%
summarize(n = sum(!is.na(value))) %>%
arrange(desc(n))
metaComb_long$variable <- factor(metaComb_long$variable,
levels = metaComb_long_n$variable)
ggplot(metaComb_long, aes(Estuary, value)) +
geom_boxplot() +
facet_wrap(~ variable, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank())
# Some key partially shared variables
metaComb_long_shared <- metaComb_long %>%
filter(variable == "Salinity_ppt_all" |
variable == "Cl_mgL" |
variable == "CH4_ug_m2_h" |
variable == "CO2_ug_m2_h" |
variable == "SO4_mgL" |
variable == "NH4_mgL" |
variable == "NO3_mgL" |
variable == "PO4_mgL" |
variable == "pH" |
variable == "sed_per_C" |
variable == "sed_per_N" |
variable == "sed_CN")
ggplot(metaComb_long_shared, aes(Estuary, value)) +
geom_boxplot() +
facet_wrap(~ variable, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank())
pdf("InitialFigs/Comb_All_Biogeochem.pdf", width = 10, height = 10)
ggplot(metaComb_long, aes(Estuary, value)) +
geom_boxplot() +
facet_wrap(~ variable, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank())
dev.off()
# Methane relationships
ggplot(metaComb, aes(Salinity_ppt_all, CH4_ug_m2_h)) +
geom_point(aes(color = Estuary)) +
geom_smooth() +
scale_color_viridis_d() +
labs(x = "Salinity (ppt)",
y = "CH4 (ug/m2/h)") +
theme_bw()
ggplot(metaComb, aes(Salinity_ppt_all, CH4_ug_m2_h)) +
geom_point(aes(color = Estuary)) +
geom_smooth() +
scale_y_log10() +
scale_color_viridis_d() +
labs(x = "Salinity (ppt)",
y = "CH4 (ug/m2/h)") +
theme_bw()
ggplot(metaComb, aes(Estuary, CH4_ug_m2_h)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank())
ggplot(metaComb, aes(Estuary, CH4_ug_m2_h, colour = Estuary)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter() +
scale_y_log10() +
scale_color_viridis_d() +
theme_bw() +
theme(legend.position = "none")
ggplot(metaComb, aes(Salinity_ppt_all, CH4_ug_m2_h)) +
geom_point(aes(color = Estuary)) +
geom_smooth(method = "lm") +
scale_y_log10() +
scale_color_viridis_d() +
facet_wrap(~ Estuary, ncol = 4) +
labs(x = "Salinity (ppt)",
y = "CH4 (ug/m2/h)") +
theme_bw()
# Show trends by estuary
pdf("InitialFigs/Comb_All_CH4_Salinity.pdf", width = 9, height = 4)
ggplot(metaComb, aes(Salinity_ppt_all, CH4_ug_m2_h)) +
geom_point(aes(color = Estuary)) +
geom_smooth(method = "lm") +
scale_y_log10() +
scale_color_viridis_d() +
facet_wrap(~ Estuary, ncol = 4) +
labs(x = "Salinity (ppt)",
y = "CH4 (ug/m2/h)") +
theme_bw()
# Show trends by estuary
pdf("InitialFigs/Comb_All_CH4_Salinity.pdf", width = 9, height = 4)
dev.off()
# Show trends by estuary
pdf("InitialFigs/Comb_All_CH4_Salinity.pdf", width = 9, height = 4)
pdf("InitialFigs/Comb_All_CH4.pdf", width = 7, height = 5)
dev.off()
suppressMessages(library(dplyr))
suppressMessages(library(rlang))
suppressMessages(library(tibble))
library(mctoolsr)
library(pheatmap)
library(RColorBrewer)
library(cowplot)
`%notin%` <- Negate(`%in%`)
save_pheatmap_pdf <- function(x, filename, width = 2.5, height = 2.5) {
stopifnot(!missing(x))
stopifnot(!missing(filename))
pdf(filename, width=width, height=height)
grid::grid.newpage()
grid::grid.draw(x$gtable)
dev.off()
}
setwd("~/Documents/GitHub/SF_microbe_methane/taxon_analysis/")
#### Ratios ####
# Check some guild ratio correlations
guilds <- read.table("../guild_analysis/Silva_OTU_Guild_abundT_counts.txt", sep = "\t")
View(guilds)
plot(guilds$AO_NOB, guilds$Methanotroph)
ggplot(guilds, aes(AO_NOB, Methanotroph)) +
geom_point() +
geom_smooth() +
theme_classic()
library(ggplot2)
ggplot(guilds, aes(AO_NOB, Methanotroph)) +
geom_point() +
geom_smooth() +
theme_classic()
ggplot(guilds, aes(AO_NOB, Methanogen_Troph)) +
geom_point() +
geom_smooth() +
theme_classic()
cor.test(AO_NOB, Methanotroph, data = guilds)
cor.test(guilds$AO_NOB, guilds$Methanotroph)
# NS
cor.test(guilds$AO_NOB, guilds$Methanogen_Troph)
ggplot(guilds, aes(AO_NOB, Methanogen_Troph)) +
geom_point() +
geom_smooth() +
theme_classic()
# Data Imports From Wyatt
# Import OTU Table
SilvaOTUs <- read.table("../silvaOTUs/Silva_OTU_VSTcpm.txt", sep='\t')
row.names(SilvaOTUs) <- SilvaOTUs[,"OTU"]
SilvaOTUs <- SilvaOTUs[,-1]
otu_V <- SilvaOTUs
# Sort OTU table
otu_V <- otu_V[order(otu_V$Consensus.lineage),]
# Make new top level plotting var (should be in PRE-PROCESS ? )
otu_V$Taxonomy <- ifelse(otu_V$Phylum == "Proteobacteria", paste(otu_V$Class), paste(otu_V$Phylum))
otu_V <- data.frame(otu_V)
# METADATA
metaDB <-read.table("../data/meta/SF_sal_meta_FIX3.txt", sep="\t", header=TRUE)
# Prune metadata to only iTag samples
# Get Sample names in OTU table
OTU_samps <- data.frame('Sample'= colnames(otu_V))
# Merge site order and Samples
Meta_iTag <- merge(metaDB, OTU_samps, by='Sample')
rownames(Meta_iTag) <- Meta_iTag$Sample
# add any extra variables as needed
CH4 <- Meta_iTag$CH4_ug_m2_h
Meta_iTag$CH4_logn1 <- log10(CH4 - (1.05*min(CH4)))
# New Code by Cliff
dim(otu_V)
dim(Meta_iTag)
sum(colnames(otu_V) %in% Meta_iTag$Sample)
#### _Delta ####
Meta_iTag_d <- Meta_iTag %>%
filter(SALTgroup == "FW" | SALTgroup == "Oligo")
View(Meta_iTag_d)
guilds_d <- guilds %>%
filter(rownames(.) %in% Meta_iTag_d$Sample)
# NS
cor.test(guilds_d$AO_NOB, guilds_d$Methanotroph)
ggplot(guilds_d, aes(AO_NOB, Methanotroph)) +
geom_point() +
geom_smooth() +
theme_classic()
# Positive
cor.test(guilds_d$AO_NOB, guilds_d$Methanogen_Troph)
ggplot(guilds_d, aes(AO_NOB, Methanogen_Troph)) +
geom_point() +
geom_smooth() +
theme_classic()
# Just Mayberry and West Pond
Meta_iTag_wm <- Meta_iTag %>%
filter(Location == "WestPond" | Location == "Mayberry")
guilds_wm <- guilds %>%
filter(rownames(.) %in% Meta_iTag_wm$Sample)
# Positive (should have been negative)
cor.test(guilds_wm$AO_NOB, guilds_wm$Methanotroph)
ggplot(guilds_wm, aes(AO_NOB, Methanotroph)) +
geom_point() +
geom_smooth() +
theme_classic()
# NS
cor.test(guilds_wm$AO_NOB, guilds_wm$Methanogen_Troph)
ggplot(guilds_wm, aes(AO_NOB, Methanogen_Troph)) +
geom_point() +
geom_smooth() +
theme_classic()
# Data Imports From Wyatt
# Import OTU Table
SilvaOTUs <- read.table("../silvaOTUs/Silva_OTU_VSTcpm.txt", sep='\t')
row.names(SilvaOTUs) <- SilvaOTUs[,"OTU"]
SilvaOTUs <- SilvaOTUs[,-1]
otu_V <- SilvaOTUs
# Sort OTU table
otu_V <- otu_V[order(otu_V$Consensus.lineage),]
# Make new top level plotting var (should be in PRE-PROCESS ? )
otu_V$Taxonomy <- ifelse(otu_V$Phylum == "Proteobacteria", paste(otu_V$Class), paste(otu_V$Phylum))
otu_V <- data.frame(otu_V)
# METADATA
metaDB <-read.table("../data/meta/SF_sal_meta_FIX3.txt", sep="\t", header=TRUE)
# Prune metadata to only iTag samples
# Get Sample names in OTU table
OTU_samps <- data.frame('Sample'= colnames(otu_V))
# Merge site order and Samples
Meta_iTag <- merge(metaDB, OTU_samps, by='Sample')
rownames(Meta_iTag) <- Meta_iTag$Sample
# add any extra variables as needed
CH4 <- Meta_iTag$CH4_ug_m2_h
Meta_iTag$CH4_logn1 <- log10(CH4 - (1.05*min(CH4)))
# New Code by Cliff
dim(otu_V)
dim(Meta_iTag)
sum(colnames(otu_V) %in% Meta_iTag$Sample)
# make mctoolsr object
data_loaded <- otu_V %>%
select(1:168) %>%
t() %>%
as.data.frame() %>%
arrange(rownames(.)) %>%
t() %>%
as.data.frame()
map_loaded <- Meta_iTag
taxonomy_loaded <- otu_V %>%
select(170:175) %>%
set_names(c("taxonomy1", "taxonomy2", "taxonomy3", "taxonomy4", "taxonomy5", "taxonomy6"))
sum(colnames(data_loaded) != rownames(map_loaded))
sum(rownames(data_loaded) != rownames(taxonomy_loaded))
input <- list()
input$data_loaded <- data_loaded
input$map_loaded <- map_loaded
input$taxonomy_loaded <- taxonomy_loaded
input <- filter_taxa_from_input(input,
taxa_to_remove = "PH",
at_spec_level = 3)
#### S10 Genera ####
# Need to get log2 guild genera abundances for LASSO for Figure S10b
# For Delta only
# Need to get guild table to merge those guilds with the genera table from above
# Filter to just significant LASSO guilds
# Then further filter to top 20 genera of those
setwd("~/Documents/GitHub/SF_microbe_methane/guild_analysis/")
sig_guilds <- c("SRB", "MOB_I", "MOB_IIa", "AOB", "FeRB", "Anamx", "MOB_II",
"SOxB", "CH4_ac", "FeOB")
guilds <- read.table("Silva_OTU_Guild_taxa_counts.txt", sep = "\t") %>%
select(OTU, Guild, input_d$map_loaded$Sample) %>%
filter(Guild %in% sig_guilds)
# Check MOB_IIa abundant genera (because used to be Methylosinus mentioned in text)
MOB_IIa <- read.table("Silva_OTU_Guild_taxa_counts.txt", sep = "\t") %>%
filter(Guild == "MOB_IIa")
View(MOB_IIa)
input_MOBIIa <- filter_taxa_from_input(input = input,
taxa_IDs_to_keep = MOB_IIa$OTU)
View(input_MOBIIa$taxonomy_loaded)
View(input_MOBIIa$taxonomy_loaded)
